<?phpclass AcSettingsPage{    /**     * Holds the values to be used in the fields callbacks     */ 	private $general_settings_key  = 'ac_general_settings';    private $homepage_settings_key = 'ac_homepage_settings';    private $page_settings_key     = 'ac_page_settings';    private $form_settings_key     = 'ac_form_settings';    private $footer_settings_key   = 'ac_footer_settings';    private $css_settings_key      = 'ac_css_settings';    private $plugin_options_key    = 'ac_page_options';    private $plugin_settings_tabs  = array();    /**     * Start up     */    public function __construct()    {    	add_action( 'init', array( $this, 'load_settings' ) );        // Register general options        add_action( 'admin_init', array( $this, 'register_general_settings' ) );         // Register homepage options        add_action( 'admin_init', array( $this, 'register_homepage_settings' ) );        // Register page options        add_action( 'admin_init', array( $this, 'register_page_settings' ) );        // Register form options        add_action( 'admin_init', array( $this, 'register_form_settings' ) );         // Register footer options        add_action( 'admin_init', array( $this, 'register_footer_settings' ) );          // Register css options        add_action( 'admin_init', array( $this, 'register_css_settings' ) );                 // Add the page to the admin menu        add_action( 'admin_menu', array( $this, 'add_plugin_page' ) );              }	function load_settings() {	    $this->general_settings = (array) get_option( $this->general_settings_key );	    $this->homepage_settings = (array) get_option( $this->homepage_settings_key );        $this->page_settings = (array) get_option( $this->page_settings_key );        $this->form_settings = (array) get_option( $this->form_settings_key );        $this->footer_settings = (array) get_option( $this->footer_settings_key );        $this->css_settings = (array) get_option( $this->css_settings_key );	    // Merge with defaults	    $this->general_settings = array_merge( array(	        'general_option' => 'Home Page Options'	    ), $this->general_settings );	    $this->homepage_settings = array_merge( array(	        'homepage_option' => 'Home Page Options'	    ), $this->homepage_settings );        $this->page_settings = array_merge( array(            'page_option' => 'Page Options'        ), $this->page_settings );        $this->form_settings = array_merge( array(            'form_option' => 'Form Options'        ), $this->form_settings );        $this->footer_settings = array_merge( array(            'footer_option' => 'Footer Options'        ), $this->footer_settings );        $this->css_settings = array_merge( array(            'css_option' => 'CSS Options'        ), $this->css_settings );	}    /**     * Add options page     */    public function add_plugin_page()    {        $pi_options_page = add_options_page(                            'Settings Admin',                             'AC Framework Theme Options',                             'manage_options',                              $this->plugin_options_key,                             array( $this, 'create_admin_page' )                        );        add_action( 'admin_print_scripts-' . $pi_options_page, array( $this, 'ac_print_scripts' ) );    }    /**     * Scripts to upload images    */    public function ac_print_scripts() {          // Stylesheet used by Thickbox        wp_enqueue_style( 'thickbox' );        // Css rules for Color Picker        wp_enqueue_style( 'wp-color-picker' );        // Thickbox scripts        wp_enqueue_script( 'thickbox' );        // Media Upload scripts        wp_enqueue_script( 'media-upload' );        // Custom script to start thickbox        wp_enqueue_script( 'ac-upload', get_template_directory_uri() . '/assets/js/ac-upload.js', array( 'thickbox', 'media-upload' ) );        // Make sure to add the wp-color-picker dependecy to js file        wp_enqueue_script( 'ca_custom_js', get_template_directory_uri() .'/assets/js/ac-picker.js', array( 'jquery', 'wp-color-picker' ), '', true  );    }    /**     * Options page callback     */    public function create_admin_page()    {    	$tab = isset( $_GET['tab'] ) ? $_GET['tab'] : $this->general_settings_key;        // Set class property        $this->options = get_option( 'ac_option_name' );        ?>        <div class="wrap">			<?php $this->plugin_options_tabs(); ?>            <a href="http://whitetreatmentdata.com/ac-framework-docs/">Documentation</a>                       <form method="post" action="options.php">            <?php                // This prints out all hidden setting fields            	wp_nonce_field( 'update-options' );                settings_fields( $tab);                   do_settings_sections( $tab );                submit_button();             ?>            </form>        </div>        <?php    }	/*	 * Renders our tabs in the plugin options page,	 * walks through the object's tabs array and prints	 * them one by one. Provides the heading for the	 * plugin_options_page method.	 */	function plugin_options_tabs() {		$current_tab = isset( $_GET['tab'] ) ? $_GET['tab'] : $this->general_settings_key;		screen_icon();		echo '<h2 class="nav-tab-wrapper">';		foreach ( $this->plugin_settings_tabs as $tab_key => $tab_caption ) {			$active = $current_tab == $tab_key ? 'nav-tab-active' : '';			echo '<a class="nav-tab ' . $active . '" href="?page=' . $this->plugin_options_key . '&tab=' . $tab_key . '">' . $tab_caption . '</a>';			}		echo '</h2>';	}    /**     * Register and add general settings     */    public function register_general_settings(){		$this->plugin_settings_tabs[$this->general_settings_key] = 'General';		register_setting( 			$this->general_settings_key, 			$this->general_settings_key,            array( $this, 'sanitize' )		);		add_settings_section( 			'section_general', 			'General Settings', 			array( $this, 'print_section_info' ), 			$this->general_settings_key 		);        add_settings_field(             'ac_logo',             'Logo Image',             array( $this, 'main_image_callback_general' ),             $this->general_settings_key,             'section_general',            'ac_logo'         );        add_settings_field(             'ac_central_image',             'Main Slider Image',             array( $this, 'main_image_callback_general' ),             $this->general_settings_key,             'section_general',            'ac_central_image'         );        		add_settings_field(             'ac_state_abb',             'Select State',             array( $this, 'select_state_callback' ),             $this->general_settings_key,             'section_general' 		);        add_settings_field(             'ac_font_color',             'Font Color',             array( $this, 'ac_color_picker' ),             $this->general_settings_key,            'section_general',            'ac_font_color'         );        add_settings_field(             'ac_font_family',             'Font Family',             array( $this, 'font_family_callback' ),             $this->general_settings_key,            'section_general'         );        add_settings_field(             'ac_main_color_picker',             'Main Color',             array( $this, 'ac_color_picker' ),             $this->general_settings_key,            'section_general',            'ac_main_color_picker'        );        add_settings_field(             'ac_second_color_picker',             'Secondary Color',             array( $this, 'ac_color_picker' ),             $this->general_settings_key,            'section_general',            'ac_second_color_picker'         );        add_settings_field(             'ac_number',             'Phone Number',             array( $this, 'general_text_callback' ),             $this->general_settings_key,            'section_general',            'ac_number'         );        add_settings_field(            'upper_cta',             'Upper CTA HTML',             array( $this, 'general_textarea_callback' ),             $this->general_settings_key,            'section_general',            'upper_cta'                 );            add_settings_field(             'ac_main_image_bg',             'Main Image Background',             array( $this, 'main_image_callback_general' ),             $this->general_settings_key,            'section_general',            'ac_main_image_bg'        );        add_settings_field(             'insurance_logos',             'Insurance Logos',             array( $this, 'main_image_callback_general' ),             $this->general_settings_key,            'section_general',            'insurance_logos'        );        add_settings_field(             'ac_menu_picker',             'Menu Background Color',             array( $this, 'ac_color_picker' ),             $this->general_settings_key,            'section_general',            'ac_menu_picker'         );                     }    /**     * Register and add homepage settings     */    public function register_homepage_settings()    {   		$this->plugin_settings_tabs[$this->homepage_settings_key] = 'Homepage';		register_setting( 			$this->homepage_settings_key, 			$this->homepage_settings_key,            array( $this, 'sanitize' ) // Sanitize 		);        //Main         add_settings_section(            'section_homepage', // ID            'Home Page Settings', // Title            array( $this, 'print_section_info' ), // Callback			$this->homepage_settings_key         );        //Slide 1        add_settings_field(             'ac_main_image',             'Slide 1',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'ac_main_image'        );        //Slide 2        add_settings_field(             'ac_main_image_two',             'Slide 2',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'ac_main_image_two'        );        //Slide 3        add_settings_field(             'ac_main_image_three',             'Slide 3',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'ac_main_image_three'        );        //CTA 1 Image        add_settings_field(             'cta_button_image_one',             'CTA Button 1 Image',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'cta_button_image_one'        );        //CTA 2 Image        add_settings_field(             'cta_button_image_two',             'CTA Button 2 Image',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'cta_button_image_two'        );        add_settings_field(            'middle_cta',             'Middle CTA HTML',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'middle_cta'                 );        add_settings_field(             'middle_cta_font_color',             'Middle CTA Font Color',             array( $this, 'home_color_picker' ),             $this->homepage_settings_key,            'section_homepage',            'middle_cta_font_color'        );                     add_settings_field(            'bottom_cta',             'Bottom CTA HTML',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'bottom_cta'                 );        add_settings_field(            'bottom_cta_background_image',             'Bottom CTA Background Image',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'bottom_cta_background_image'                 );                                      //Features        add_settings_field(             'feature_background',             'Feature background Color',             array( $this, 'home_color_picker' ),             $this->homepage_settings_key,            'section_homepage',            'feature_background'        );         add_settings_field(             'feature_title_one',             'Feature Title One',             array( $this, 'text_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_title_one'        );         add_settings_field(             'feature_image_one',             'Feature Image One',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_image_one'        );        add_settings_field(             'feature_text_one',             'Feature Text One',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_text_one'        );        add_settings_field(             'feature_link_one',             'Feature Link One',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_link_one'        );        add_settings_field(             'feature_title_two',             'Feature Title Two',             array( $this, 'text_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_title_two'        );          add_settings_field(             'feature_image_two',             'Feature Image Two',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_image_two'        );        add_settings_field(             'feature_text_two',             'Feature Text Two',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_text_two'        );        add_settings_field(             'feature_link_two',             'Feature Link Two',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_link_two'        );        add_settings_field(             'feature_title_three',             'Feature Title Three',             array( $this, 'text_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_title_three'        );          add_settings_field(             'feature_image_three',             'Feature Image Three',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_image_three'        );        add_settings_field(             'feature_text_three',             'Feature Text Three',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_text_three'        );        add_settings_field(             'feature_link_three',             'Feature Link Three',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'feature_link_three'        );        add_settings_field(             'contact_page_cta',             'Contact us CTA Image',             array( $this, 'main_image_callback' ),             $this->homepage_settings_key,            'section_homepage',            'contact_page_cta'        );        add_settings_field(             'contact_page_cta_text',             'Contact us CTA Image',             array( $this, 'textarea_callback' ),             $this->homepage_settings_key,            'section_homepage',            'contact_page_cta_text'        );          }    /**     * Register and add page settings     */    public function register_page_settings(){        $this->plugin_settings_tabs[$this->page_settings_key] = 'Page';        register_setting(             $this->page_settings_key,             $this->page_settings_key,            array( $this, 'sanitize' )        );        add_settings_section(             'section_page',             'Page Settings',             array( $this, 'print_section_info' ),             $this->page_settings_key         );        add_settings_field(             'title_background',             'Title Background',             array( $this, 'page_image_callback' ),             $this->page_settings_key,             'section_page',            'title_background'         );        add_settings_field(             'contact_ribbon',             'Contact Us Ribbon',             array( $this, 'page_image_callback' ),             $this->page_settings_key,             'section_page',            'contact_ribbon'         );        add_settings_field(             'contact_text',             'Contact Us Text. (Works for home page as well)',             array( $this, 'page_textarea_callback' ),             $this->page_settings_key,             'section_page',            'contact_text'         );        add_settings_field(             'sidebar_position',             'Choose Sidebar Position',             array( $this, 'sidebar_position_callback' ),             $this->page_settings_key,             'section_page',            'sidebar_position'         );            }    /**     * Register and add page settings     */    public function register_form_settings(){        $this->plugin_settings_tabs[$this->form_settings_key] = 'Form';        register_setting(             $this->form_settings_key,             $this->form_settings_key,            array( $this, 'sanitize' )        );        add_settings_section(             'section_form',             'Form Settings',             array( $this, 'print_section_info' ),             $this->form_settings_key         );        add_settings_field(             'home_form_background',             'Home Form Background Image',             array( $this, 'form_image_callback' ),             $this->form_settings_key,             'section_form',            'home_form_background'         );        add_settings_field(             'home_form_background_color',             'Home Form Background Color (Image will overwrite)',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'home_form_background_color'         );        add_settings_field(             'home_form_font_color',             'Home Form Font Color',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'home_form_font_color'         );        add_settings_field(             'regular_form_background',             'Regular Form Background Image',             array( $this, 'form_image_callback' ),             $this->form_settings_key,             'section_form',            'regular_form_background'         );         add_settings_field(             'regular_form_background_color',             'Regular Form Background Color (Image will overwrite)',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'regular_form_background_color'         );        add_settings_field(             'regular_form_font_color',             'Regular Form Font Color',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'regular_form_font_color'         );        add_settings_field(             'ac_form_background',             'Form Section Background',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'ac_form_background'        );        add_settings_field(             'placeholder_color',             'Form Input Field Text Color',             array( $this, 'form_color_picker_callback' ),             $this->form_settings_key,             'section_form',            'placeholder_color'        );                     }    /**     * Register and add footer settings     */    public function register_footer_settings(){        $this->plugin_settings_tabs[$this->footer_settings_key] = 'Footer';        register_setting(             $this->footer_settings_key,             $this->footer_settings_key,            array( $this, 'sanitize' )        );        add_settings_section(             'section_footer',             'Footer Settings',             array( $this, 'print_section_info' ),             $this->footer_settings_key         );        add_settings_field(             'footer_columns',             'Footer Columns',             array( $this, 'footer_columns_callback' ),             $this->footer_settings_key,             'section_footer'        );        add_settings_field(             'footer_logo_image',             'Footer Logo Image',             array( $this, 'footer_image_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_logo_image'         );        add_settings_field(             'footer_address',             'Footer Address',             array( $this, 'footer_textarea_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_address'         );           add_settings_field(             'footer_chat_title',             'Footer Chat Title',             array( $this, 'footer_text_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_chat_title'         );        add_settings_field(             'footer_background',             'Footer Background',             array( $this, 'footer_color_picker_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_background'         );        add_settings_field(             'footer_copyright_background',             'Footer Copyright Background',             array( $this, 'footer_color_picker_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_copyright_background'         );                add_settings_field(             'footer_color',             'Footer Font Color',             array( $this, 'footer_color_picker_callback' ),             $this->footer_settings_key,             'section_footer',            'footer_color'         );           }    /**     * Register and add CSS settings     */    public function register_css_settings(){        $this->plugin_settings_tabs[$this->css_settings_key] = 'CSS';        register_setting(             $this->css_settings_key,             $this->css_settings_key,            array( $this, 'sanitize' )        );        add_settings_section(             'section_css',             'Enter Custom CSS',             array( $this, 'print_section_info' ),             $this->css_settings_key         );        add_settings_field(             'css_value',             'CSS Code',             array( $this, 'css_callback' ),             $this->css_settings_key,             'section_css',            'css_value'        );       }    /**     * Sanitize each setting field as needed     *     * @param array $input Contains all settings fields as array keys     */    public function sanitize( $input )    {        //Header Options        $new_input = array();        //General options                if( isset( $input['ac_state_abb'] ) )            $new_input['ac_state_abb'] = sanitize_text_field( $input['ac_state_abb'] );        if( isset( $input['ac_logo'] ) )            $new_input['ac_logo'] = sanitize_text_field( $input['ac_logo'] );        if( isset( $input['ac_central_image'] ) )            $new_input['ac_central_image'] = sanitize_text_field( $input['ac_central_image'] );                if( isset( $input['ac_font_color'] ) )            $new_input['ac_font_color'] = sanitize_text_field( $input['ac_font_color'] );        if( isset( $input['ac_font_family'] ) )            $new_input['ac_font_family'] = sanitize_text_field( $input['ac_font_family'] );        if( isset( $input['ac_main_color_picker'] ) )            $new_input['ac_main_color_picker'] = sanitize_text_field( $input['ac_main_color_picker'] );        if( isset( $input['ac_second_color_picker'] ) )            $new_input['ac_second_color_picker'] = sanitize_text_field( $input['ac_second_color_picker'] );        if( isset( $input['ac_number'] ) )            $new_input['ac_number'] = sanitize_text_field( $input['ac_number'] );        if( isset( $input['insurance_logos'] ) )            $new_input['insurance_logos'] = sanitize_text_field( $input['insurance_logos'] );        if( isset( $input['ac_menu_picker'] ) )            $new_input['ac_menu_picker'] = sanitize_text_field( $input['ac_menu_picker'] );        if( isset( $input['ac_form_background'] ) )            $new_input['ac_form_background'] = sanitize_text_field( $input['ac_form_background'] );        if( isset( $input['placeholder_color'] ) )            $new_input['placeholder_color'] = sanitize_text_field( $input['placeholder_color'] );                             //Header CTA Options        if( isset( $input['upper_cta'] ) )            $new_input['upper_cta'] = htmlspecialchars( $input['upper_cta'] );        if( isset( $input['ac_main_image_bg'] ) )            $new_input['ac_main_image_bg'] = sanitize_text_field( $input['ac_main_image_bg'] );        //Homepage options        if( isset( $input['ac_main_image'] ) )            $new_input['ac_main_image'] = sanitize_text_field( $input['ac_main_image'] );        if( isset( $input['ac_main_image_two'] ) )            $new_input['ac_main_image_two'] = sanitize_text_field( $input['ac_main_image_two'] );        if( isset( $input['ac_main_image_three'] ) )            $new_input['ac_main_image_three'] = sanitize_text_field( $input['ac_main_image_three'] );        if( isset( $input['ac_main_image_caption'] ) )            $new_input['ac_main_image_caption'] = sanitize_text_field( $input['ac_main_image_caption'] );        if( isset( $input['cta_button_image_one'] ) )            $new_input['cta_button_image_one'] = sanitize_text_field( $input['cta_button_image_one'] );        if( isset( $input['cta_button_image_two'] ) )            $new_input['cta_button_image_two'] = sanitize_text_field( $input['cta_button_image_two'] );        if( isset( $input['middle_cta'] ) )            $new_input['middle_cta'] = htmlspecialchars( $input['middle_cta'] );        if( isset( $input['middle_cta_font_color'] ) )            $new_input['middle_cta_font_color'] = sanitize_text_field( $input['middle_cta_font_color'] );                      if( isset( $input['bottom_cta'] ) )            $new_input['bottom_cta'] = htmlspecialchars( $input['bottom_cta'] );        if( isset( $input['bottom_cta_background_image'] ) )            $new_input['bottom_cta_background_image'] = htmlspecialchars( $input['bottom_cta_background_image'] );                                        //Features        if( isset( $input['feature_background'] ) )            $new_input['feature_background'] = sanitize_text_field( $input['feature_background'] );        if( isset( $input['feature_image_one'] ) )            $new_input['feature_image_one'] = sanitize_text_field( $input['feature_image_one'] );        if( isset( $input['feature_image_two'] ) )            $new_input['feature_image_two'] = sanitize_text_field( $input['feature_image_two'] );        if( isset( $input['feature_image_three'] ) )            $new_input['feature_image_three'] = sanitize_text_field( $input['feature_image_three'] );        if( isset( $input['feature_text_one'] ) )            $new_input['feature_text_one'] = sanitize_text_field( $input['feature_text_one'] );        if( isset( $input['feature_text_two'] ) )            $new_input['feature_text_two'] = sanitize_text_field( $input['feature_text_two'] );        if( isset( $input['feature_text_three'] ) )            $new_input['feature_text_three'] = sanitize_text_field( $input['feature_text_three'] );        if( isset( $input['feature_title_one'] ) )            $new_input['feature_title_one'] = sanitize_text_field( $input['feature_title_one'] );        if( isset( $input['feature_title_two'] ) )            $new_input['feature_title_two'] = sanitize_text_field( $input['feature_title_two'] );        if( isset( $input['feature_title_three'] ) )            $new_input['feature_title_three'] = sanitize_text_field( $input['feature_title_three'] );        if( isset( $input['feature_link_one'] ) )            $new_input['feature_link_one'] = htmlspecialchars( $input['feature_link_one'] );        if( isset( $input['feature_link_two'] ) )            $new_input['feature_link_two'] = htmlspecialchars( $input['feature_link_two'] );        if( isset( $input['feature_link_three'] ) )            $new_input['feature_link_three'] = htmlspecialchars( $input['feature_link_three'] );        if( isset( $input['contact_page_cta'] ) )            $new_input['contact_page_cta'] = sanitize_text_field( $input['contact_page_cta'] );        if( isset( $input['contact_page_cta_text'] ) )            $new_input['contact_page_cta_text'] = htmlspecialchars( $input['contact_page_cta_text'] );                //Page Options        if( isset( $input['title_background'] ) )            $new_input['title_background'] = sanitize_text_field( $input['title_background'] );             if( isset( $input['contact_ribbon'] ) )            $new_input['contact_ribbon'] = sanitize_text_field( $input['contact_ribbon'] );         if( isset( $input['contact_text'] ) )            $new_input['contact_text'] = htmlspecialchars( $input['contact_text'] );         if( isset( $input['sidebar_position'] ) )            $new_input['sidebar_position'] = sanitize_text_field( $input['sidebar_position'] );                       //Form Options        if( isset( $input['home_form_background'] ) )            $new_input['home_form_background'] = sanitize_text_field( $input['home_form_background'] );        if( isset( $input['home_form_background_color'] ) )            $new_input['home_form_background_color'] = sanitize_text_field( $input['home_form_background_color'] );        if( isset( $input['home_form_font_color'] ) )            $new_input['home_form_font_color'] = sanitize_text_field( $input['home_form_font_color'] );          if( isset( $input['regular_form_background'] ) )            $new_input['regular_form_background'] = sanitize_text_field( $input['regular_form_background'] );        if( isset( $input['regular_form_background_color'] ) )            $new_input['regular_form_background_color'] = sanitize_text_field( $input['regular_form_background_color'] );        if( isset( $input['regular_form_font_color'] ) )            $new_input['regular_form_font_color'] = sanitize_text_field( $input['regular_form_font_color'] );        //Footer Options        if( isset( $input['footer_columns'] ) )            $new_input['footer_columns'] = sanitize_text_field( $input['footer_columns'] );          if( isset( $input['footer_logo_image'] ) )            $new_input['footer_logo_image'] = sanitize_text_field( $input['footer_logo_image'] );        if( isset( $input['footer_address'] ) )            $new_input['footer_address'] = htmlspecialchars( $input['footer_address'] );        if( isset( $input['footer_chat_title'] ) )            $new_input['footer_chat_title'] = sanitize_text_field( $input['footer_chat_title'] );        if( isset( $input['footer_background'] ) )            $new_input['footer_background'] = sanitize_text_field( $input['footer_background'] );		if( isset( $input['footer_copyright_background'] ) )            $new_input['footer_copyright_background'] = sanitize_text_field( $input['footer_copyright_background'] );                          if( isset( $input['footer_color'] ) )            $new_input['footer_color'] = sanitize_text_field( $input['footer_color'] );        //CSS Options        if( isset( $input['css_value'] ) )            $new_input['css_value'] =$input['css_value'];                           return $new_input;    }    /**      * Print the Section text     */    public function print_section_info()    {    	print '<p>Enter & Upload your settings below:</p>';    }    /**      * Get the settings option array and print one of its values     */    public function logo_callback()    {           printf(            '<span class="upload">                <input type="hidden" id="ac_logo" class="regular-text text-upload" name="ac_option_name[ac_logo]" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br>            </span>',            isset( $this->options['ac_logo'] ) ? esc_url( $this->options['ac_logo']) : '',            isset( $this->options['ac_logo'] ) ? esc_url( $this->options['ac_logo']) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function select_state_callback()    {           /*State Abbreviations*/        $states = array(            'AL'=>'Alabama',            'AK'=>'Alaska',            'AZ'=>'Arizona',            'AR'=>'Arkansas',            'CA'=>'California',            'CO'=>'Colorado',            'CT'=>'Connecticut',            'DE'=>'Delaware',            'DC'=>'District of Columbia',            'FL'=>'Florida',            'GA'=>'Georgia',            'HI'=>'Hawaii',            'ID'=>'Idaho',            'IL'=>'Illinois',            'IN'=>'Indiana',            'IA'=>'Iowa',            'KS'=>'Kansas',            'KY'=>'Kentucky',            'LA'=>'Louisiana',            'ME'=>'Maine',            'MD'=>'Maryland',            'MA'=>'Massachusetts',            'MI'=>'Michigan',            'MN'=>'Minnesota',            'MS'=>'Mississippi',            'MO'=>'Missouri',            'MT'=>'Montana',            'NE'=>'Nebraska',            'NV'=>'Nevada',            'NH'=>'New Hampshire',            'NJ'=>'New Jersey',            'NM'=>'New Mexico',            'NY'=>'New York',            'NC'=>'North Carolina',            'ND'=>'North Dakota',            'OH'=>'Ohio',            'OK'=>'Oklahoma',            'OR'=>'Oregon',            'PA'=>'Pennsylvania',            'RI'=>'Rhode Island',            'SC'=>'South Carolina',            'SD'=>'South Dakota',            'TN'=>'Tennessee',            'TX'=>'Texas',            'UT'=>'Utah',            'VT'=>'Vermont',            'VA'=>'Virginia',            'WA'=>'Washington',            'WV'=>'West Virginia',            'WI'=>'Wisconsin',            'WY'=>'Wyoming'        );        echo '<select id="ac_state_abb" name="'.$this->general_settings_key.'[ac_state_abb]" value="true">';            foreach ($states as $key => $state) {                echo '<option value="' . $key . '"';                if ( $key === $this->general_settings['ac_state_abb']) {                    echo '" selected="selected"';                }                echo '>' . $state . '</option>';             }         echo '</select>';    }    /**      * Get the settings option array and print one of its values     */    public function font_family_callback()    {           $fonts = array('Open Sans', 'Droid Sans', 'Lato', 'Bitter', 'Helvetica', 'Georgia', 'Trebuchet MS');        echo '<select id="ac_font_family" name="'.$this->general_settings_key.'[ac_font_family]" value="true">';            foreach ($fonts as $key => $font) {                echo '<option value="' . $font . '"';                if ( $font === $this->general_settings['ac_font_family']) {                    echo '" selected="selected"';                }                echo '>' . $font . '</option>';             }         echo '</select>';    }    /**      *  General Color Picker     */        public function ac_color_picker( $value )     {            printf(            '<input type="text" name="'.$this->general_settings_key.'['. $value .']" value="%s" class="ac-color-picker" >',            isset( $this->general_settings[$value] ) ? $this->general_settings[$value] : ''        );       }    /**      * Get the settings option array and print one of its values     */    public function general_text_callback($value)    {        printf(            '<input type="text" id="' . $value . '" name="'. $this->general_settings_key .'['. $value .']" value="%s"/>',            isset( $this->general_settings[$value] ) ? esc_attr( $this->general_settings[$value] ) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function general_textarea_callback( $value )    {        printf(            '<textarea type="text" id="' . $value . '" name="'. $this->general_settings_key .'['. $value .']" class="ac-textarea">%s</textarea>',            isset( $this->general_settings[$value] ) ? esc_attr( $this->general_settings[$value]) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function main_image_callback_general($value)    {           printf(            '<span class="upload">                <input type="hidden" id="'. $value .'" class="regular-text text-upload" name="'. $this->general_settings_key .'[' . $value . ']" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br/>            </span>',            isset( $this->general_settings[$value] ) ? esc_url( $this->general_settings[$value]) : '',            isset( $this->general_settings[$value] ) ? esc_url( $this->general_settings[$value]) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function text_callback($value)    {        printf(            '<input type="text" id="'. $value .'" name="'. $this->homepage_settings_key .'['. $value .']" value="%s"/>',            isset( $this->homepage_settings[$value] ) ? esc_attr( $this->homepage_settings[$value] ) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function textarea_callback( $value )    {        printf(            '<textarea type="text" id="'. $value .'" name="'. $this->homepage_settings_key  .'['. $value .']" class="ac-textarea">%s</textarea>',            isset( $this->homepage_settings[$value] ) ? esc_attr( $this->homepage_settings[$value]) : ''        );    }    /**      *  Feature Color Picker     */        public function home_color_picker( $value )     {            printf(            '<input type="text" name="'. $this->homepage_settings_key  .'['. $value .']" value="%s" class="ac-color-picker" >',            isset( $this->homepage_settings[$value] ) ? $this->homepage_settings[$value] : ''        );       }    /**      * Get the settings option array and print one of its values     */    public function main_image_callback($value)    {           printf(            '<span class="upload">                <input type="hidden" id="'. $value .'" class="regular-text text-upload" name="'. $this->homepage_settings_key .'[' . $value . ']" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br/>            </span>',            isset( $this->homepage_settings[$value] ) ? esc_url( $this->homepage_settings[$value]) : '',            isset( $this->homepage_settings[$value] ) ? esc_url( $this->homepage_settings[$value]) : ''        );    }    /**      * Display Image option for page     */    public function page_image_callback($value)    {           printf(            '<span class="upload">                <input type="hidden" id="'. $value .'" class="regular-text text-upload" name="'. $this->page_settings_key .'[' . $value . ']" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br/>            </span>',            isset( $this->page_settings[$value] ) ? esc_url( $this->page_settings[$value]) : '',            isset( $this->page_settings[$value] ) ? esc_url( $this->page_settings[$value]) : ''        );    }    /**      * Text callback option for Page     */    public function page_textarea_callback( $value )    {        printf(            '<textarea type="text" id="'. $value .'" name="'. $this->page_settings_key  .'['. $value .']" class="ac-textarea">%s</textarea>',            isset( $this->page_settings[$value] ) ? esc_attr( $this->page_settings[$value]) : ''        );    }    /**      * Choose wether sidebar will be on the right or left. For page     */    public function sidebar_position_callback()    {           $sides = array('right', 'left');        echo '<select id="sidebar_position" name="'.$this->page_settings_key.'[sidebar_position]" value="true">';            foreach ($sides as $key => $side) {                echo '<option value="' . $side . '"';                if ( $side === $this->page_settings['sidebar_position']) {                    echo '" selected="selected"';                }                echo '>' . $side . '</option>';             }         echo '</select>';    }    /**      * Display Image option for form     */    public function form_image_callback($value)    {           printf(            '<span class="upload">                <input type="hidden" id="'. $value .'" class="regular-text text-upload" name="'. $this->form_settings_key .'[' . $value . ']" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br/>            </span>',            isset( $this->form_settings[$value] ) ? esc_url( $this->form_settings[$value]) : '',            isset( $this->form_settings[$value] ) ? esc_url( $this->form_settings[$value]) : ''        );    }    /**      *  Form Color Picker     */        public function form_color_picker_callback( $value )     {            printf(            '<input type="text" name="'.$this->form_settings_key.'['. $value .']" value="%s" class="ac-color-picker" >',            isset( $this->form_settings[$value] ) ? $this->form_settings[$value] : ''        );       }    /**      * Display Image option for footer     */    public function footer_image_callback($value)    {           printf(            '<span class="upload">                <input type="hidden" id="'. $value .'" class="regular-text text-upload" name="'. $this->footer_settings_key .'[' . $value . ']" value="%s"/>                <img src="%s" class="preview-upload"/>                <input type="button" class="button button-upload" value="Upload an image"/><br/>            </span>',            isset( $this->footer_settings[$value] ) ? esc_url( $this->footer_settings[$value]) : '',            isset( $this->footer_settings[$value] ) ? esc_url( $this->footer_settings[$value]) : ''        );    }    /**      * Footer textarea render     */    public function footer_textarea_callback( $value )    {        printf(            '<textarea type="text" id="'. $value .'" name="'. $this->footer_settings_key  .'['. $value .']" class="ac-textarea">%s</textarea>',            isset( $this->footer_settings[$value] ) ? esc_attr( $this->footer_settings[$value]) : ''        );    }    /**      * Get the settings option array and print one of its values     */    public function footer_text_callback($value)    {        printf(            '<input type="text" id="'. $value .'" name="'. $this->footer_settings_key .'['. $value .']" value="%s"/>',            isset( $this->footer_settings[$value] ) ? esc_attr( $this->footer_settings[$value] ) : ''        );    }    /**      * Choose number of columns for footer     */    public function footer_columns_callback()    {           $columns = array('3', '4', '6');        echo '<select id="footer_columns" name="'.$this->footer_settings_key.'[footer_columns]" value="true">';            foreach ($columns as $key => $column) {                echo '<option value="' . $column . '"';                if ( $column === $this->footer_settings['footer_columns']) {                    echo '" selected="selected"';                }                echo '>' . $column . '</option>';             }         echo '</select>';    }    /**      *  Footer Color Picker     */        public function footer_color_picker_callback( $value )     {            printf(            '<input type="text" name="'.$this->footer_settings_key.'['. $value .']" value="%s" class="ac-color-picker" >',            isset( $this->footer_settings[$value] ) ? $this->footer_settings[$value] : ''        );       }    /**      * CSS Code area render     */    public function css_callback( $value )    {        printf(            '<textarea type="text" id="'. $value .'" name="'. $this->css_settings_key  .'['. $value .']" class="ac-textarea">%s</textarea>',            isset( $this->css_settings[$value] ) ? esc_attr( $this->css_settings[$value]) : ''        );    }}if( is_admin() )    $ac_settings_page = new AcSettingsPage();